{"version":3,"sources":["useTreeItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  getIntrinsicElementProps,\n  useId,\n  useEventCallback,\n  slot,\n  elementContains,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport type { TreeItemProps, TreeItemState, TreeItemValue } from './TreeItem.types';\nimport { Space } from '@fluentui/keyboard-keys';\nimport { treeDataTypes } from '../../utils/tokens';\nimport {\n  useTreeContext_unstable,\n  useSubtreeContext_unstable,\n  useTreeItemContext_unstable,\n  TreeContext,\n} from '../../contexts';\nimport { dataTreeItemValueAttrName } from '../../utils/getTreeItemValueFromElement';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { treeClassNames } from '../../Tree';\n\n/**\n * Create the state required to render TreeItem.\n *\n * The returned state can be modified with hooks such as useTreeItemStyles_unstable,\n * before being passed to renderTreeItem_unstable.\n *\n * @param props - props from this instance of TreeItem\n * @param ref - reference to root HTMLElement of TreeItem\n */\nexport function useTreeItem_unstable(props: TreeItemProps, ref: React.Ref<HTMLDivElement>): TreeItemState {\n  'use no memo';\n\n  const treeType = useTreeContext_unstable(ctx => ctx.treeType);\n  if (treeType === 'flat') {\n    warnIfNoProperPropsFlatTreeItem(props);\n  }\n  const requestTreeResponse = useTreeContext_unstable(ctx => ctx.requestTreeResponse);\n  const { level: contextLevel } = useSubtreeContext_unstable();\n  const parentValue = useTreeItemContext_unstable(ctx => props.parentValue ?? ctx.value);\n\n  // note, if the value is not externally provided,\n  // then selection and expansion will not work properly\n  const internalValue = useId('fuiTreeItemValue-');\n  const value: TreeItemValue = props.value ?? internalValue;\n\n  const {\n    onClick,\n    onKeyDown,\n    onChange,\n    as = 'div',\n    itemType = 'leaf',\n    'aria-level': level = contextLevel,\n    'aria-selected': ariaSelected,\n    'aria-expanded': ariaExpanded,\n    ...rest\n  } = props;\n\n  const actionsRef = React.useRef<HTMLDivElement>(null);\n  const expandIconRef = React.useRef<HTMLDivElement>(null);\n  const layoutRef = React.useRef<HTMLDivElement>(null);\n  const subtreeRef = React.useRef<HTMLDivElement>(null);\n  const selectionRef = React.useRef<HTMLInputElement>(null);\n  const treeItemRef = React.useRef<HTMLDivElement>(null);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This is acceptable since the NODE_ENV will not change during runtime\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasTreeContext = useHasParentContext(TreeContext);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (hasTreeContext) {\n        return;\n      }\n\n      if (treeItemRef.current?.querySelector(`.${treeClassNames.root}`)) {\n        // eslint-disable-next-line no-console\n        console.error(/** #__DE-INDENT__ */ `\n      @fluentui/react-tree [useTreeItem]:\n      <TreeItem> should be declared inside a <Tree> component.\n    `);\n      }\n    }, [hasTreeContext]);\n  }\n\n  const open = useTreeContext_unstable(ctx => props.open ?? ctx.openItems.has(value));\n  const getNextOpen = () => (itemType === 'branch' ? !open : open);\n  const selectionMode = useTreeContext_unstable(ctx => ctx.selectionMode);\n  const checked = useTreeContext_unstable(ctx => ctx.checkedItems.get(value) ?? false);\n\n  const handleClick = useEventCallback((event: React.MouseEvent<HTMLDivElement>) => {\n    onClick?.(event);\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    if (itemType === 'leaf') {\n      return;\n    }\n    const isEventFromActions = actionsRef.current && elementContains(actionsRef.current, event.target as Node);\n    if (isEventFromActions) {\n      return;\n    }\n    const isEventFromSubtree = subtreeRef.current && elementContains(subtreeRef.current, event.target as Node);\n    if (isEventFromSubtree) {\n      return;\n    }\n    const isEventFromSelection = selectionRef.current && elementContains(selectionRef.current, event.target as Node);\n    if (isEventFromSelection) {\n      return;\n    }\n    const isEventFromExpandIcon = expandIconRef.current && elementContains(expandIconRef.current, event.target as Node);\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      const data = {\n        event,\n        value,\n        open: getNextOpen(),\n        target: event.currentTarget,\n        type: isEventFromExpandIcon ? treeDataTypes.ExpandIconClick : treeDataTypes.Click,\n      } as const;\n      props.onOpenChange?.(event, data);\n      requestTreeResponse({\n        ...data,\n        itemType,\n        requestType: 'open',\n      });\n      requestTreeResponse({\n        ...data,\n        itemType,\n        parentValue,\n        requestType: 'navigate',\n        type: treeDataTypes.Click,\n      });\n    });\n  });\n\n  const handleKeyDown = useEventCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n    onKeyDown?.(event);\n    // Ignore keyboard events that do not originate from the current tree item.\n    if (event.isDefaultPrevented() || event.currentTarget !== event.target) {\n      return;\n    }\n    switch (event.key) {\n      case Space:\n        if (selectionMode !== 'none') {\n          selectionRef.current?.click();\n          // Prevents the page from scrolling down when the spacebar is pressed\n          event.preventDefault();\n        }\n        return;\n      case treeDataTypes.Enter: {\n        return event.currentTarget.click();\n      }\n      case treeDataTypes.End:\n      case treeDataTypes.Home:\n      case treeDataTypes.ArrowUp:\n      case treeDataTypes.ArrowDown:\n        return requestTreeResponse({\n          requestType: 'navigate',\n          event,\n          value,\n          itemType,\n          parentValue,\n          type: event.key,\n          target: event.currentTarget,\n        });\n      case treeDataTypes.ArrowLeft: {\n        // arrow left with alt key is reserved for history navigation\n        if (event.altKey) {\n          return;\n        }\n        // do not navigate to parent if the item is on the top level\n        if (level === 1 && !open) {\n          return;\n        }\n        const data = {\n          value,\n          event,\n          open: getNextOpen(),\n          type: event.key,\n          target: event.currentTarget,\n        } as const;\n        if (open) {\n          props.onOpenChange?.(event, data);\n        }\n        requestTreeResponse({\n          ...data,\n          itemType,\n          parentValue,\n          requestType: open ? 'open' : 'navigate',\n        });\n        return;\n      }\n      case treeDataTypes.ArrowRight: {\n        // arrow right with alt key is reserved for history navigation\n        if (event.altKey) {\n          return;\n        }\n        // do not navigate or open if the item is a leaf\n        if (itemType === 'leaf') {\n          return;\n        }\n        const data = {\n          value,\n          event,\n          open: getNextOpen(),\n          type: event.key,\n          target: event.currentTarget,\n        } as const;\n        if (!open) {\n          props.onOpenChange?.(event, data);\n        }\n        requestTreeResponse({\n          ...data,\n          itemType,\n          parentValue,\n          requestType: open ? 'navigate' : 'open',\n        });\n        return;\n      }\n    }\n    const isTypeAheadCharacter =\n      event.key.length === 1 && event.key.match(/\\w/) && !event.altKey && !event.ctrlKey && !event.metaKey;\n    if (isTypeAheadCharacter) {\n      requestTreeResponse({\n        requestType: 'navigate',\n        event,\n        target: event.currentTarget,\n        value,\n        itemType,\n        type: treeDataTypes.TypeAhead,\n        parentValue,\n      });\n    }\n  });\n\n  const handleChange = useEventCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event);\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    const isEventFromSubtree = subtreeRef.current && elementContains(subtreeRef.current, event.target as Node);\n    if (isEventFromSubtree) {\n      return;\n    }\n    requestTreeResponse({\n      requestType: 'selection',\n      event,\n      value,\n      itemType,\n      type: 'Change',\n      target: event.currentTarget,\n      checked: checked === 'mixed' ? true : !checked,\n    });\n  });\n\n  return {\n    value,\n    open,\n    checked,\n    subtreeRef,\n    layoutRef,\n    selectionRef,\n    expandIconRef,\n    treeItemRef,\n    actionsRef,\n    itemType,\n    level,\n    components: {\n      root: 'div',\n    },\n    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false\n    isAsideVisible: false,\n    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false\n    isActionsVisible: false,\n    root: slot.always(\n      getIntrinsicElementProps(as, {\n        tabIndex: -1,\n        [dataTreeItemValueAttrName]: value,\n        ...rest,\n        ref: useMergedRefs(ref, treeItemRef),\n        role: 'treeitem',\n        'aria-level': level,\n        'aria-checked': selectionMode === 'multiselect' ? checked : undefined,\n        // Casting: when selectionMode is 'single', checked is a boolean\n        'aria-selected': ariaSelected !== undefined ? ariaSelected : selectionMode === 'single' ? !!checked : undefined,\n        'aria-expanded': ariaExpanded !== undefined ? ariaExpanded : itemType === 'branch' ? open : undefined,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        onChange: handleChange,\n      } as const),\n      { elementType: 'div' },\n    ),\n  };\n}\n\nfunction warnIfNoProperPropsFlatTreeItem(\n  props: Pick<TreeItemProps, 'aria-setsize' | 'aria-posinset' | 'aria-level' | 'parentValue'>,\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      props['aria-posinset'] === undefined ||\n      props['aria-setsize'] === undefined ||\n      props['aria-level'] === undefined ||\n      (props.parentValue === undefined && props['aria-level'] !== 1)\n    ) {\n      // eslint-disable-next-line no-console\n      console.error(/** #__DE-INDENT__ */ `\n        @fluentui/react-tree [${useTreeItem_unstable.name}]:\n        A flat treeitem must have \"aria-posinset\", \"aria-setsize\", \"aria-level\"\n        and \"parentValue\" (if \"aria-level\" > 1) to ensure a11y and navigation.\n\n        - \"aria-posinset\": the position of this treeitem in the current level of the tree.\n        - \"aria-setsize\": the number of siblings in this level of the tree.\n        - \"aria-level\": the current level of the treeitem.\n        - \"parentValue\": the \"value\" property of the parent item of this item.\n      `);\n    }\n  }\n}\n"],"names":["React","ReactDOM","getIntrinsicElementProps","useId","useEventCallback","slot","elementContains","useMergedRefs","Space","treeDataTypes","useTreeContext_unstable","useSubtreeContext_unstable","useTreeItemContext_unstable","TreeContext","dataTreeItemValueAttrName","useHasParentContext","treeClassNames","useTreeItem_unstable","props","ref","treeType","ctx","warnIfNoProperPropsFlatTreeItem","requestTreeResponse","level","contextLevel","parentValue","value","internalValue","onClick","onKeyDown","onChange","as","itemType","ariaSelected","ariaExpanded","rest","actionsRef","useRef","expandIconRef","layoutRef","subtreeRef","selectionRef","treeItemRef","process","env","NODE_ENV","hasTreeContext","useEffect","current","querySelector","root","console","error","open","openItems","has","getNextOpen","selectionMode","checked","checkedItems","get","handleClick","event","isDefaultPrevented","isEventFromActions","target","isEventFromSubtree","isEventFromSelection","isEventFromExpandIcon","unstable_batchedUpdates","data","currentTarget","type","ExpandIconClick","Click","onOpenChange","requestType","handleKeyDown","key","click","preventDefault","Enter","End","Home","ArrowUp","ArrowDown","ArrowLeft","altKey","ArrowRight","isTypeAheadCharacter","length","match","ctrlKey","metaKey","TypeAhead","handleChange","components","isAsideVisible","isActionsVisible","always","tabIndex","role","undefined","elementType","name"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}