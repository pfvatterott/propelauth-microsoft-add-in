{"version":3,"sources":["useTreeItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {\n  getIntrinsicElementProps,\n  useId,\n  useEventCallback,\n  slot,\n  elementContains,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport type { TreeItemProps, TreeItemState, TreeItemValue } from './TreeItem.types';\nimport { Space } from '@fluentui/keyboard-keys';\nimport { treeDataTypes } from '../../utils/tokens';\nimport {\n  useTreeContext_unstable,\n  useSubtreeContext_unstable,\n  useTreeItemContext_unstable,\n  TreeContext,\n} from '../../contexts';\nimport { dataTreeItemValueAttrName } from '../../utils/getTreeItemValueFromElement';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { treeClassNames } from '../../Tree';\n\n/**\n * Create the state required to render TreeItem.\n *\n * The returned state can be modified with hooks such as useTreeItemStyles_unstable,\n * before being passed to renderTreeItem_unstable.\n *\n * @param props - props from this instance of TreeItem\n * @param ref - reference to root HTMLElement of TreeItem\n */\nexport function useTreeItem_unstable(props: TreeItemProps, ref: React.Ref<HTMLDivElement>): TreeItemState {\n  'use no memo';\n\n  const treeType = useTreeContext_unstable(ctx => ctx.treeType);\n  if (treeType === 'flat') {\n    warnIfNoProperPropsFlatTreeItem(props);\n  }\n  const requestTreeResponse = useTreeContext_unstable(ctx => ctx.requestTreeResponse);\n  const { level: contextLevel } = useSubtreeContext_unstable();\n  const parentValue = useTreeItemContext_unstable(ctx => props.parentValue ?? ctx.value);\n\n  // note, if the value is not externally provided,\n  // then selection and expansion will not work properly\n  const internalValue = useId('fuiTreeItemValue-');\n  const value: TreeItemValue = props.value ?? internalValue;\n\n  const {\n    onClick,\n    onKeyDown,\n    onChange,\n    as = 'div',\n    itemType = 'leaf',\n    'aria-level': level = contextLevel,\n    'aria-selected': ariaSelected,\n    'aria-expanded': ariaExpanded,\n    ...rest\n  } = props;\n\n  const actionsRef = React.useRef<HTMLDivElement>(null);\n  const expandIconRef = React.useRef<HTMLDivElement>(null);\n  const layoutRef = React.useRef<HTMLDivElement>(null);\n  const subtreeRef = React.useRef<HTMLDivElement>(null);\n  const selectionRef = React.useRef<HTMLInputElement>(null);\n  const treeItemRef = React.useRef<HTMLDivElement>(null);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This is acceptable since the NODE_ENV will not change during runtime\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasTreeContext = useHasParentContext(TreeContext);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (hasTreeContext) {\n        return;\n      }\n\n      if (treeItemRef.current?.querySelector(`.${treeClassNames.root}`)) {\n        // eslint-disable-next-line no-console\n        console.error(/** #__DE-INDENT__ */ `\n      @fluentui/react-tree [useTreeItem]:\n      <TreeItem> should be declared inside a <Tree> component.\n    `);\n      }\n    }, [hasTreeContext]);\n  }\n\n  const open = useTreeContext_unstable(ctx => props.open ?? ctx.openItems.has(value));\n  const getNextOpen = () => (itemType === 'branch' ? !open : open);\n  const selectionMode = useTreeContext_unstable(ctx => ctx.selectionMode);\n  const checked = useTreeContext_unstable(ctx => ctx.checkedItems.get(value) ?? false);\n\n  const handleClick = useEventCallback((event: React.MouseEvent<HTMLDivElement>) => {\n    onClick?.(event);\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    if (itemType === 'leaf') {\n      return;\n    }\n    const isEventFromActions = actionsRef.current && elementContains(actionsRef.current, event.target as Node);\n    if (isEventFromActions) {\n      return;\n    }\n    const isEventFromSubtree = subtreeRef.current && elementContains(subtreeRef.current, event.target as Node);\n    if (isEventFromSubtree) {\n      return;\n    }\n    const isEventFromSelection = selectionRef.current && elementContains(selectionRef.current, event.target as Node);\n    if (isEventFromSelection) {\n      return;\n    }\n    const isEventFromExpandIcon = expandIconRef.current && elementContains(expandIconRef.current, event.target as Node);\n\n    ReactDOM.unstable_batchedUpdates(() => {\n      const data = {\n        event,\n        value,\n        open: getNextOpen(),\n        target: event.currentTarget,\n        type: isEventFromExpandIcon ? treeDataTypes.ExpandIconClick : treeDataTypes.Click,\n      } as const;\n      props.onOpenChange?.(event, data);\n      requestTreeResponse({\n        ...data,\n        itemType,\n        requestType: 'open',\n      });\n      requestTreeResponse({\n        ...data,\n        itemType,\n        parentValue,\n        requestType: 'navigate',\n        type: treeDataTypes.Click,\n      });\n    });\n  });\n\n  const handleKeyDown = useEventCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n    onKeyDown?.(event);\n    // Ignore keyboard events that do not originate from the current tree item.\n    if (event.isDefaultPrevented() || event.currentTarget !== event.target) {\n      return;\n    }\n    switch (event.key) {\n      case Space:\n        if (selectionMode !== 'none') {\n          selectionRef.current?.click();\n          // Prevents the page from scrolling down when the spacebar is pressed\n          event.preventDefault();\n        }\n        return;\n      case treeDataTypes.Enter: {\n        return event.currentTarget.click();\n      }\n      case treeDataTypes.End:\n      case treeDataTypes.Home:\n      case treeDataTypes.ArrowUp:\n      case treeDataTypes.ArrowDown:\n        return requestTreeResponse({\n          requestType: 'navigate',\n          event,\n          value,\n          itemType,\n          parentValue,\n          type: event.key,\n          target: event.currentTarget,\n        });\n      case treeDataTypes.ArrowLeft: {\n        // arrow left with alt key is reserved for history navigation\n        if (event.altKey) {\n          return;\n        }\n        // do not navigate to parent if the item is on the top level\n        if (level === 1 && !open) {\n          return;\n        }\n        const data = {\n          value,\n          event,\n          open: getNextOpen(),\n          type: event.key,\n          target: event.currentTarget,\n        } as const;\n        if (open) {\n          props.onOpenChange?.(event, data);\n        }\n        requestTreeResponse({\n          ...data,\n          itemType,\n          parentValue,\n          requestType: open ? 'open' : 'navigate',\n        });\n        return;\n      }\n      case treeDataTypes.ArrowRight: {\n        // arrow right with alt key is reserved for history navigation\n        if (event.altKey) {\n          return;\n        }\n        // do not navigate or open if the item is a leaf\n        if (itemType === 'leaf') {\n          return;\n        }\n        const data = {\n          value,\n          event,\n          open: getNextOpen(),\n          type: event.key,\n          target: event.currentTarget,\n        } as const;\n        if (!open) {\n          props.onOpenChange?.(event, data);\n        }\n        requestTreeResponse({\n          ...data,\n          itemType,\n          parentValue,\n          requestType: open ? 'navigate' : 'open',\n        });\n        return;\n      }\n    }\n    const isTypeAheadCharacter =\n      event.key.length === 1 && event.key.match(/\\w/) && !event.altKey && !event.ctrlKey && !event.metaKey;\n    if (isTypeAheadCharacter) {\n      requestTreeResponse({\n        requestType: 'navigate',\n        event,\n        target: event.currentTarget,\n        value,\n        itemType,\n        type: treeDataTypes.TypeAhead,\n        parentValue,\n      });\n    }\n  });\n\n  const handleChange = useEventCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange?.(event);\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    const isEventFromSubtree = subtreeRef.current && elementContains(subtreeRef.current, event.target as Node);\n    if (isEventFromSubtree) {\n      return;\n    }\n    requestTreeResponse({\n      requestType: 'selection',\n      event,\n      value,\n      itemType,\n      type: 'Change',\n      target: event.currentTarget,\n      checked: checked === 'mixed' ? true : !checked,\n    });\n  });\n\n  return {\n    value,\n    open,\n    checked,\n    subtreeRef,\n    layoutRef,\n    selectionRef,\n    expandIconRef,\n    treeItemRef,\n    actionsRef,\n    itemType,\n    level,\n    components: {\n      root: 'div',\n    },\n    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false\n    isAsideVisible: false,\n    // FIXME: this property is not necessary anymore, but as removing it would be a breaking change, we need to keep it as false\n    isActionsVisible: false,\n    root: slot.always(\n      getIntrinsicElementProps(as, {\n        tabIndex: -1,\n        [dataTreeItemValueAttrName]: value,\n        ...rest,\n        ref: useMergedRefs(ref, treeItemRef),\n        role: 'treeitem',\n        'aria-level': level,\n        'aria-checked': selectionMode === 'multiselect' ? checked : undefined,\n        // Casting: when selectionMode is 'single', checked is a boolean\n        'aria-selected': ariaSelected !== undefined ? ariaSelected : selectionMode === 'single' ? !!checked : undefined,\n        'aria-expanded': ariaExpanded !== undefined ? ariaExpanded : itemType === 'branch' ? open : undefined,\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        onChange: handleChange,\n      } as const),\n      { elementType: 'div' },\n    ),\n  };\n}\n\nfunction warnIfNoProperPropsFlatTreeItem(\n  props: Pick<TreeItemProps, 'aria-setsize' | 'aria-posinset' | 'aria-level' | 'parentValue'>,\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      props['aria-posinset'] === undefined ||\n      props['aria-setsize'] === undefined ||\n      props['aria-level'] === undefined ||\n      (props.parentValue === undefined && props['aria-level'] !== 1)\n    ) {\n      // eslint-disable-next-line no-console\n      console.error(/** #__DE-INDENT__ */ `\n        @fluentui/react-tree [${useTreeItem_unstable.name}]:\n        A flat treeitem must have \"aria-posinset\", \"aria-setsize\", \"aria-level\"\n        and \"parentValue\" (if \"aria-level\" > 1) to ensure a11y and navigation.\n\n        - \"aria-posinset\": the position of this treeitem in the current level of the tree.\n        - \"aria-setsize\": the number of siblings in this level of the tree.\n        - \"aria-level\": the current level of the treeitem.\n        - \"parentValue\": the \"value\" property of the parent item of this item.\n      `);\n    }\n  }\n}\n"],"names":["useTreeItem_unstable","props","ref","treeType","useTreeContext_unstable","ctx","warnIfNoProperPropsFlatTreeItem","requestTreeResponse","level","contextLevel","useSubtreeContext_unstable","parentValue","useTreeItemContext_unstable","value","internalValue","useId","onClick","onKeyDown","onChange","as","itemType","ariaSelected","ariaExpanded","rest","actionsRef","React","useRef","expandIconRef","layoutRef","subtreeRef","selectionRef","treeItemRef","process","env","NODE_ENV","hasTreeContext","useHasParentContext","TreeContext","useEffect","current","querySelector","treeClassNames","root","console","error","open","openItems","has","getNextOpen","selectionMode","checked","checkedItems","get","handleClick","useEventCallback","event","isDefaultPrevented","isEventFromActions","elementContains","target","isEventFromSubtree","isEventFromSelection","isEventFromExpandIcon","ReactDOM","unstable_batchedUpdates","data","currentTarget","type","treeDataTypes","ExpandIconClick","Click","onOpenChange","requestType","handleKeyDown","key","Space","click","preventDefault","Enter","End","Home","ArrowUp","ArrowDown","ArrowLeft","altKey","ArrowRight","isTypeAheadCharacter","length","match","ctrlKey","metaKey","TypeAhead","handleChange","components","isAsideVisible","isActionsVisible","slot","always","getIntrinsicElementProps","tabIndex","dataTreeItemValueAttrName","useMergedRefs","role","undefined","elementType","name"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}