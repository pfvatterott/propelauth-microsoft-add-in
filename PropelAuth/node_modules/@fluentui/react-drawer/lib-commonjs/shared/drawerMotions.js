"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    InlineDrawerMotion: function() {
        return InlineDrawerMotion;
    },
    OverlayDrawerMotion: function() {
        return OverlayDrawerMotion;
    },
    OverlaySurfaceBackdropMotion: function() {
        return OverlaySurfaceBackdropMotion;
    }
});
const _reactmotion = require("@fluentui/react-motion");
const _reacttheme = require("@fluentui/react-theme");
const _useDrawerBaseStylesstyles = require("./useDrawerBaseStyles.styles");
const durations = {
    small: _reactmotion.motionTokens.durationGentle,
    medium: _reactmotion.motionTokens.durationSlow,
    large: _reactmotion.motionTokens.durationSlower,
    full: _reactmotion.motionTokens.durationUltraSlow
};
const InlineDrawerMotion = (0, _reactmotion.createPresenceComponent)(({ position, size })=>{
    const keyframes = [
        {
            ...position === 'start' && {
                transform: `translate3d(calc(var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}) * -1), 0, 0)`
            },
            ...position === 'end' && {
                transform: `translate3d(var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}), 0, 0)`
            },
            ...position === 'bottom' && {
                transform: `translate3d(0, var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}), 0)`
            },
            opacity: 0
        },
        {
            transform: 'translate3d(0, 0, 0)',
            opacity: 1
        }
    ];
    const duration = durations[size];
    return {
        enter: {
            keyframes,
            duration,
            easing: _reactmotion.motionTokens.curveDecelerateMid
        },
        exit: {
            keyframes: [
                ...keyframes
            ].reverse(),
            duration,
            easing: _reactmotion.motionTokens.curveAccelerateMin
        }
    };
});
const OverlayDrawerMotion = (0, _reactmotion.createPresenceComponent)(({ position, size })=>{
    const keyframes = [
        {
            ...position === 'start' && {
                transform: `translate3D(calc(var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}) * -1), 0, 0)`
            },
            ...position === 'end' && {
                transform: `translate3d(calc(var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}) * 1), 0, 0)`
            },
            ...position === 'bottom' && {
                transform: `translate3d(0, calc(var(${_useDrawerBaseStylesstyles.drawerCSSVars.drawerSizeVar}) * 1), 0)`
            },
            boxShadow: `0px ${_reacttheme.tokens.colorTransparentBackground}`,
            opacity: 0
        },
        {
            transform: 'translate3d(0, 0, 0)',
            boxShadow: _reacttheme.tokens.shadow64,
            opacity: 1
        }
    ];
    const duration = durations[size];
    return {
        enter: {
            keyframes,
            duration,
            easing: _reactmotion.motionTokens.curveDecelerateMid
        },
        exit: {
            keyframes: [
                ...keyframes
            ].reverse(),
            duration,
            easing: _reactmotion.motionTokens.curveAccelerateMin
        }
    };
});
const OverlaySurfaceBackdropMotion = (0, _reactmotion.createPresenceComponent)(({ size })=>{
    const keyframes = [
        {
            opacity: 0
        },
        {
            opacity: 1
        }
    ];
    const duration = durations[size];
    return {
        enter: {
            keyframes,
            easing: _reactmotion.motionTokens.curveLinear,
            duration
        },
        exit: {
            keyframes: [
                ...keyframes
            ].reverse(),
            easing: _reactmotion.motionTokens.curveLinear,
            duration
        }
    };
});
